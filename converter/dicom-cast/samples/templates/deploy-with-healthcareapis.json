{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspaceRegion": {
      "defaultValue": "[resourceGroup().location",
      "type": "string",
      "allowedValues": [
        "australiaeast",
        "canadacentral",
        "eastus",
        "eastus2",
        "germanywestcentral",
        "japaneast",
        "northcentralus",
        "northeurope",
        "southafricanorth",
        "southcentralus",
        "southeastasia",
        "switzerlandnorth",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westeurope",
        "westus2"
      ]
    },
    "workspaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the workspace."
      }
    },
    "fhirServiceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the workspace FHIR service."
      }
    },
    "dicomServiceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the workspace DICOM service."
      }
    },
    "serviceName": {
      "minLength": 3,
      "maxLength": 24,
      "type": "string",
      "metadata": {
        "description": "Name of the DICOM Cast service container group."
      }
    },
    "image": {
      "defaultValue": "dicomoss.azurecr.io/dicom-cast",
      "type": "string",
      "metadata": {
        "description": "Container image to deploy. Should be of the form repoName/imagename for images stored in public Docker Hub, or a fully qualified URI for other registries. Images from private registries require additional registry credentials."
      }
    },
    "imageTag": {
      "type": "String",
      "metadata": {
          "description": "Image tag. Ex: 10.0.479. You can find the latest https://github.com/microsoft/dicom-server/tags"
      }
    },
    "storageAccountSku": {
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ],
      "type": "string"
    },
    "deployApplicationInsights": {
      "defaultValue": true,
      "type": "bool",
      "metadata": {
        "description": "Deploy Application Insights for the DICOM server. Disabled for Microsoft Azure Government (MAG)"
      }
    },
    "applicationInsightsLocation": {
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "southeastasia",
        "northeurope",
        "westeurope",
        "eastus",
        "southcentralus",
        "westus2"
      ],
      "type": "string"
    },
    "cpuCores": {
      "defaultValue": "1.0",
      "type": "string",
      "metadata": {
        "description": "The number of CPU cores to allocate to the container."
      }
    },
    "memoryInGb": {
      "defaultValue": "1.5",
      "type": "string",
      "metadata": {
        "description": "The amount of memory to allocate to the container in gigabytes."
      }
    },
    "location": {
      "defaultValue": "[resourceGroup().location]",
      "type": "string",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "restartPolicy": {
      "defaultValue": "always",
      "allowedValues": [
        "never",
        "always",
        "onfailure"
      ],
      "type": "string",
      "metadata": {
        "description": "The behavior of Azure runtime if container has stopped."
      }
    },
    "patientSystemId": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Patient SystemId configured by the user"
      }
    },
    "isIssuerIdUsed": {
      "defaultValue": false,
      "type": "bool",
      "metadata": {
        "description": "Issuer id or patient system id used based on this boolean value"
      }
    },
    "enforceValidationOfTagValues": {
      "defaultValue": false,
      "type": "bool",
      "metadata": {
        "description": "Enforce validation of all tag values and do not store to FHIR even if only non-required tags are invalid"
      }
    },
    "ignoreJsonParsingErrors": {
      "defaultValue": false,
      "type": "Bool",
      "metadata": {
          "description": "Ignore json parsing errors for DICOM instances with malformed DICOM json"
      }
    }
  },
  "variables": {
    "authority": "[concat('https://login.microsoftonline.com/', subscription().tenantId)]",
    "fhirServiceName": "[concat(parameters('workspaceName'), '/', parameters('fhirServiceName'))]",
    "dicomServiceName": "[concat(parameters('workspaceName'), '/', parameters('dicomServiceName'))]",
    "fhirEndpoint": "[concat('https://', parameters('workspaceName'), '-', parameters('fhirServiceName'), '.fhir.azurehealthcareapis.com')]",
    "dicomWebEndpoint": "[concat('https://', parameters('workspaceName'), '-', parameters('dicomServiceName'), '.dicom.azurehealthcareapis.com')]",
    "authenticationArray": [
      {
        "name": "DicomWeb__Authentication__AuthenticationType",
        "value": "ManagedIdentity"
      },
      {
        "name": "DicomWeb__Authentication__Enabled",
        "value": "true"
      },
      {
        "name": "DicomWeb__Authentication__ManagedIdentityCredential__Resource",
        "value": "https://dicom.healthcareapis.azure.com"
      },
      {
        "name": "Fhir__Authentication__AuthenticationType",
        "value": "ManagedIdentity"
      },
      {
        "name": "Fhir__Authentication__Enabled",
        "value": "true"
      },
      {
        "name": "Fhir__Authentication__ManagedIdentityCredential__Resource",
        "value": "[variables('fhirEndpoint')]"
      }
    ]
  },
  "resources": [{
      "type": "Microsoft.HealthcareApis/workspaces",
      "name": "[parameters('workspaceName')]",
      "apiVersion": "2020-11-01-preview",
      "location": "[parameters('workspaceRegion')]",
      "properties": {}
    },
    {
      "type": "Microsoft.HealthcareApis/workspaces/fhirservices",
      "kind": "fhir-R4",
      "name": "[variables('fhirServiceName')]",
      "apiVersion": "2020-11-01-preview",
      "location": "[parameters('workspaceRegion')]",
      "dependsOn": [
        "[resourceId('Microsoft.HealthcareApis/workspaces', parameters('workspaceName'))]"
      ],
      "properties": {
        "authenticationConfiguration": {
          "authority": "[variables('authority')]",
          "audience": "[variables('fhirEndpoint')]"
        }
      }
    },
    {
      "type": "Microsoft.HealthcareApis/workspaces/dicomservices",
      "name": "[variables('dicomServiceName')]",
      "apiVersion": "2020-11-01-preview",
      "location": "[parameters('workspaceRegion')]",
      "dependsOn": [
        "[resourceId('Microsoft.HealthcareApis/workspaces', parameters('workspaceName'))]"
      ],
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "linkedTemplate",
      "dependsOn": [
        "[resourceId('Microsoft.HealthcareApis/workspaces/fhirservices', parameters('workspaceName'), parameters('fhirServiceName'))]",
        "[resourceId('Microsoft.HealthcareApis/workspaces/dicomservices', parameters('workspaceName'), parameters('dicomServiceName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/microsoft/dicom-server/main/converter/dicom-cast/samples/templates/default-azuredeploy.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serviceName": {
            "value": "[parameters('serviceName')]"
          },
          "image": {
            "value": "[concat(parameters('image'), ':', parameters('imageTag'))]"
          },
          "storageAccountSku": {
            "value": "[parameters('storageAccountSku')]"
          },
          "deployApplicationInsights": {
            "value": "[parameters('deployApplicationInsights')]"
          },
          "applicationInsightsLocation": {
            "value": "[parameters('applicationInsightsLocation')]"
          },
          "cpuCores": {
            "value": "[parameters('cpuCores')]"
          },
          "memoryInGb": {
            "value": "[parameters('memoryInGb')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "dicomWebEndpoint": {
            "value": "[variables('dicomWebEndpoint')]"
          },
          "fhirEndpoint": {
            "value": "[variables('fhirEndpoint')]"
          },
          "enforceValidationOfTagValues": {
            "value": "[parameters('enforceValidationOfTagValues')]"
          },
          "ignoreJsonParsingErrors": {
            "value": "[parameters('ignoreJsonParsingErrors')]"
          },
          "additionalEnvironmentVariables": {
            "value": "[variables('authenticationArray')]"
          },
          "patientSystemId": {
            "value": "[parameters('patientSystemId')]"
          },
          "isIssuerIdUsed": {
            "value": "[parameters('isIssuerIdUsed')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.HealthcareApis/workspaces/providers/roleAssignments",
      "apiVersion": "2021-04-01-preview",
      "name": "[concat(parameters('workspaceName'), '/Microsoft.Authorization/', guid(parameters('fhirServiceName')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'linkedTemplate')]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions/', '5a1fc7df-4bf1-4951-a576-89034ee01acd')]",
        "principalId": "[reference('linkedTemplate').outputs.containerPrincipalId.value]"
      }
    },
    {
      "type": "Microsoft.HealthcareApis/workspaces/providers/roleAssignments",
      "apiVersion": "2021-04-01-preview",
      "name": "[concat(parameters('workspaceName'), '/Microsoft.Authorization/', guid(parameters('dicomServiceName')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'linkedTemplate')]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions/', '58a3b984-7adf-4c20-983a-32417c86fbc8')]",
        "principalId": "[reference('linkedTemplate').outputs.containerPrincipalId.value]"
      }
    }
  ]
}
