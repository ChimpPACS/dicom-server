version: "3.4"

services:
  microsoft.health.dicom.web:
    environment:
      BlobStore__ConnectionString: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;"
      DicomFunctions__BaseAddress: "http://functions:80/api/"
      DicomFunctions__FunctionAccessKey: "cP0rhNdD/l9Dli+kEPQwupVqfTjksqK0dmMrZo/63mD0u0ezUrRl8Q=="
      SqlServer__AllowDatabaseCreation: "true"
      SqlServer__ConnectionString: "Server=tcp:sql,1433;Initial Catalog=DICOM;Persist Security Info=False;User ID=sa;Password=${SAPASSWORD:-L0ca1P@ssw0rd};MultipleActiveResultSets=False;Connection Timeout=30;"
      SqlServer__Initialize: "true"
    depends_on:
      - functions
      - azurite
      - sql
  functions:
    build:
      # VS Container Tools does not currently support automatically attaching a debugger to Azure Functions
      # for Docker Compose, so the Dockerfile cannot be in the same folder as the csproj
      context: ./..
      dockerfile: docker/functions/Dockerfile
    environment:
      AzureFunctionsJobHost__BlobStore__ConnectionString: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;"
      AzureFunctionsJobHost__SqlServer__ConnectionString: "Server=tcp:sql,1433;Initial Catalog=DICOM;Persist Security Info=False;User ID=sa;Password=${SAPASSWORD:-L0ca1P@ssw0rd};MultipleActiveResultSets=False;Connection Timeout=30;"
      AzureWebJobsStorage: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;"
      AZURE_FUNCTIONS_ENVIRONMENT: "Development"
      SQLDB_Connection: "Server=tcp:sql,1433;Initial Catalog=DurableDB;Persist Security Info=False;User ID=sa;Password=${SAPASSWORD:-L0ca1P@ssw0rd};MultipleActiveResultSets=False;Connection Timeout=30;"
      WEBSITE_HOSTNAME: "localhost:80"
    ports:
      - "7072:80" # This is typically set by Visual Studio automatically
    depends_on:
      - azurite
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:3.14.2@sha256:443c9b28466219e21005e638a28ac4bcc6d3860509d3fc9ec8753fce64424b29
    # # These port bindings [source]:[dest] can be uncommented to connect to the storage emulator via Microsoft Azure Storage Explorer
    # # Note that the source ports may need to change if a storage emulator is already running on localhost
    # ports:
    #   - "10001:10001"
    #   - "10000:10000"
    #   - "10002:10002"
  sql:
    build:
      context: ./..
      dockerfile: docker/sql/Dockerfile
    environment:
      SA_PASSWORD: ${SAPASSWORD:-L0ca1P@ssw0rd}
      ACCEPT_EULA: "Y"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd","-U sa -P ${SAPASSWORD:-L0ca1P@ssw0rd} -Q 'SELECT * FROM INFORMATION_SCHEMA.TABLES'"]
      interval: 10s
      timeout: 10s
      retries: 6
    # # These port bindings [source]:[dest] can be uncommented to connect to SQL Server via Microsoft SQL Management Studio
    # ports:
    #   - "1433:1433"
